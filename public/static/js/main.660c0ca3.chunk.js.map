{"version":3,"sources":["component/todo/todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["incomingItem","TodoComponent","useState","todoList","setTodoList","Mylist","map","item","index","className","type","onChange","e","target","value","console","log","update","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAIIA,EAAe,GAgCJC,MAvBf,WACI,MAAiCC,mBAAS,CAAC,kBAAkB,kBAAkB,oBAA/E,mBAAOC,EAAP,KAAkBC,EAAlB,KAMMC,EAAS,WACX,OAAOF,EAASG,KAAK,SAACC,EAAMC,GAAP,OAAiB,qBAAkBC,UAAY,+CAAnBD,OAGrD,OACI,sBAAKC,UAAY,uEAAjB,UACI,oBAAIA,UAAY,oEAAhB,2BACA,sBAAKA,UAAY,iEAAjB,UACI,uBAAOC,KAAM,OAAOD,UAAY,iCAAiCE,SAAY,SAACC,GAAD,OAtBhF,SAACA,GACVZ,EAAeY,EAAEC,OAAOC,MACxBC,QAAQC,IAAIhB,GAoBoFiB,CAAOL,MAC3F,wBAAQH,UAAY,8EAA8ES,QAb3F,WACfd,EAAY,GAAD,mBAAKD,GAAL,CAAeH,MAYlB,qBAEJ,cAACK,EAAD,QCTGc,MAnBf,WACE,OACE,sBAAKV,UAAY,WAAjB,UACE,yBAAQA,UAAU,iGAAlB,UACE,sBAAKA,UAAY,2DAAjB,UACE,oBAAIA,UAAY,qBAAhB,kBACA,oBAAIA,UAAY,qBAAhB,wBACA,oBAAIA,UAAY,qBAAhB,0BACA,oBAAIA,UAAY,qBAAhB,2BAEF,qBAAKA,UAAY,8CAAjB,gCAEF,qBAAKA,UAAU,qFAAf,SACE,cAAC,EAAD,UCJOW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKtB,UAAY,2BAEnBuB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.660c0ca3.chunk.js","sourcesContent":["\r\nimport { useState} from 'react' ;\r\n\r\n\r\nlet incomingItem = '' ;\r\n\r\nlet update = (e) => {\r\n    incomingItem = e.target.value ;\r\n    console.log(incomingItem)\r\n}\r\n\r\n\r\n\r\nfunction TodoComponent(){\r\n    const [todoList , setTodoList] = useState(['add items using','add items using','add items using']) ;\r\n\r\n    const addNewItem = () => {\r\n        setTodoList([...todoList, incomingItem])\r\n    }\r\n    \r\n    const Mylist = () => {\r\n        return todoList.map( (item, index) => <div key ={index} className = 'col-span-3 h-10 mr-5 ml-5 bg-green-400 mb-2'></div>)\r\n    }\r\n\r\n    return (\r\n        <div className = 'col-span-3  grid grid-cols-3 h-full content-start w-screen sm:w-1/3 '>\r\n            <h3 className = 'col-span-3 font-serif h-10 m-4 text-xl font-semibold text-center '> My Todo List</h3>\r\n            <div className = 'col-span-3 flex justify-center h-10 m-4 font-serif text-center'>\r\n                <input type= 'text' className = 'mr-4 w-2/3 border border-black' onChange = {(e) => update(e)}></input>\r\n                <button className = 'font-semibold text-center w-1/5 border-2 text-lg border-black font-semibold' onClick = {addNewItem}>add!</button>\r\n            </div>\r\n            <Mylist />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoComponent ;","import TodoComponent from './component/todo/todo' ;\n\n\nfunction App() {\n  return (\n    <div className = 'h-screen' >\n      <header className=\"bg-black w-screen h-10 flex justify-around tracking-wide text-sm text-indigo-500 font-semibold\">\n        <div className = 'inline-flex sm:w-1/2 w-full items-center justify-center '>\n          <h2 className = 'flex-1 text-center'>ToDo</h2>\n          <h2 className = 'flex-1 text-center'> Potfolio </h2>\n          <h2 className = 'flex-1 text-center'> Calculator </h2>\n          <h2 className = 'flex-1 text-center'> Weather  </h2>\n        </div >\n        <div className = 'sm:inline-flex sm:w-1/3 items-center hidden'>Contact section</div>\n      </header>\n      <div className=\"grid grid-cols-1 md:grid-cols-3 w-full sm:justify-items-center h-5/6 bg-purple-400\">\n        <TodoComponent />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App className = 'bg-grey-500 w-screen'/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}